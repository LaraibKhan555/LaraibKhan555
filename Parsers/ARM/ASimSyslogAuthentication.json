{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "Workspace": {
        "type": "string",
        "metadata": {
          "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
        }
      },
      "WorkspaceRegion": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The region of the selected workspace. The default value will use the Region selection above."
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.OperationalInsights/workspaces",
        "apiVersion": "2017-03-15-preview",
        "name": "[parameters('Workspace')]",
        "location": "[parameters('WorkspaceRegion')]",
        "resources": [
          {
            "type": "savedSearches",
            "apiVersion": "2020-08-01",
            "name": "ASimProcessCreateLinuxSysmon",
            "dependsOn": [
              "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Process Create Event ASIM parser for Sysmon for Linux",
              "category": "ASIM",
              "FunctionAlias": "ASimProcessCreateLinuxSysmon",
              "query": "let SyslogAuthenticationSuccess = Syslog    | where SyslogMessage contains 'accepted password' | parse SyslogMessage with Activity: string ' for ' TargetUserName ' from ' IpAddress ' port ' IpPort ' ' Protocol    | extend    EventVendor = 'Linux',    EventProduct = 'Syslog',    EventCount=int(1),    EventSchemaVersion='0.1.0',    EventResult = 'Success',    EventStartTime = TimeGenerated,    EventEndTime= TimeGenerated,    EventType= 'Logon',    SrcDvcId=tostring(Computer),    SrcDvcHostname =tostring(HostName),    SrcDvcOs=tostring(Computer)    | project-rename EventOriginalUid =ProcessID, LogonMethod  = ProcessName    | project-reorder    TimeGenerated,    EventProduct,    EventOriginalUid,    EventResult,    EventStartTime,    EventEndTime,    LogonMethod,    SrcDvcId,    SrcDvcHostname,    SrcDvcOs; let SyslogAuthenticationFailed = Syslog     | where  Facility has 'authpriv' and SeverityLevel has 'info' and SyslogMessage contains 'Failed password for'    | parse SyslogMessage with Activity:string ' for ' TargetUserName ' from ' IPAddress ' port ' IpPort ' ' Protocol     | extend EventVendor = 'Linux', EventProduct = 'Syslog', EventCount=int(1), EventSchemaVersion='0.1.0', EventResult = iff (Facility ==0, 'Success', 'Failure'),EventOriginalResultDetails = coalesce(Facility, SeverityLevel), EventStartTime = TimeGenerated, EventEndTime= TimeGenerated, EventType= 'Logon', SrcDvcId=tostring(Computer), SrcDvcHostname =tostring(HostName), SrcDvcOs=tostring(SourceSystem), EventOriginalUid=tostring(ProcessID)    | project-rename LogonMethod  = ProcessName     | project-reorder TimeGenerated, EventProduct, EventOriginalUid, EventResult, EventOriginalResultDetails, EventStartTime, EventEndTime, LogonMethod, SrcDvcId, SrcDvcHostname, SrcDvcOs     | where TargetUserName !contains 'invalid user'; let SyslogAuthenticationFailedwithInvalidUser = Syslog     | where SyslogMessage contains 'failed password' and SeverityLevel == 'info'     | parse SyslogMessage with Activity:string ' for ' TargetUserName ' from ' IpAddress  ' port ' IpPort  ' ' Protocol     | where TargetUserName contains 'invalid user'     | extend tmp_Username = split(TargetUserName,' ')     | extend TargetUserName = tostring(tmp_Username[2])     | extend EventVendor = 'Linux'  , EventProduct = 'Syslog'  , EventCount=int(1)  , EventSchemaVersion='0.1.0'  , EventResult = iff (Facility ==0,'Success', 'Failure')  , EventStartTime = TimeGenerated  , EventEndTime= TimeGenerated  , EventType= 'Logon'  , SrcDvcId=tostring(Computer)  , SrcDvcHostname =tostring(HostName)  , SrcDvcOs=tostring(Computer)     | project-rename     EventOriginalUid =ProcessID     , LogonMethod  = ProcessName     | project-reorder     TimeGenerated     ,EventProduct     , EventOriginalUid     , EventResult     , EventStartTime     , EventEndTime     , LogonMethod      , SrcDvcId     , SrcDvcHostname      , SrcDvcOs; union SyslogAuthenticationFailed, SyslogAuthenticationSuccess, SyslogAuthenticationFailedwithInvalidUser",
              "version": 1,
              "functionParameters": "disabled:bool=False"
            }
          }
        ]
      }
    ]
  }